{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "defaultProperties": [
    ],
    "properties": {
        "backend": {
            "defaultProperties": [
            ],
            "description": "Backend server settings",
            "properties": {
                "allowGuestAccess": {
                    "default": true,
                    "description": "Whether to allow read-only access to the API without logging in.",
                    "type": "boolean"
                },
                "allowEmailRegistration": {
                    "default": false,
                    "description": "Whether to allow users to sign up with just their email address.",
                    "type": "boolean"
                },
                "bind": {
                    "default": "*",
                    "description": "Network interface to bind server to. Format is: \"host\" or \"host:port\". Host can be * to bind\nto all interfaces: \"*:port\". Port is 21025, if not specified.",
                    "type": "string"
                },
                "secret": {
                    "description": "Secret used for session authentication. If not specified a new secret will be generated each\nrestart.",
                    "type": "string"
                },
                "socketThrottle": {
                    "default": 125,
                    "description": "Minimum time between socket updates, in milliseconds. Setting this lower may cause\nperformance issues in the client.",
                    "type": "number"
                },
                "steamApiKey": {
                    "description": "Steam Web API key used to authenticate users. You can get a key here:\nhttp://steamcommunity.com/dev/apikey",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "database": {
            "defaultProperties": [
            ],
            "description": "Configuration for global database storage",
            "properties": {
                "data": {
                    "default": "./screeps/db",
                    "description": "Persistent storage provider URI",
                    "type": "string"
                },
                "pubsub": {
                    "default": "local://db",
                    "description": "Pubsub storage provider URI",
                    "type": "string"
                },
                "saveInterval": {
                    "default": 120,
                    "description": "How often (in wall time minutes) to save the main database",
                    "type": "number"
                }
            },
            "required": [
                "data",
                "pubsub"
            ],
            "type": "object"
        },
        "game": {
            "defaultProperties": [
            ],
            "description": "Game settings",
            "properties": {
                "respawnTimeout": {
                    "default": 0,
                    "description": "Amount of time in hours before a user is allowed to respawn, counted from the time of their\ninitial spawn placement.",
                    "type": "number"
                },
                "tickSpeed": {
                    "default": 250,
                    "description": "Minimum length of a game tick in milliseconds.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "launcher": {
            "defaultProperties": [
            ],
            "description": "Launcher settings",
            "properties": {
                "singleThreaded": {
                    "default": false,
                    "description": "Set true to run all services in a single nodejs isolate. This does *not* affect the runner's\nisolates.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "mods": {
            "description": "List of mods to load",
            "items": {
                "type": "string"
            },
            "type": "array"
        },
        "processor": {
            "defaultProperties": [
            ],
            "description": "Processor settings",
            "properties": {
                "concurrency": {
                    "description": "Total number of processor tasks to run at a time. The default is the number of CPU cores\n(including hyper-threaded) + 1",
                    "type": "number"
                },
                "intentAbandonTimeout": {
                    "default": 5000,
                    "description": "Timeout in milliseconds before the processors give up on waiting for intents from the Runner\nservice and continue processing all outstanding rooms.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "runner": {
            "defaultProperties": [
            ],
            "description": "Runner settings",
            "properties": {
                "concurrency": {
                    "description": "Total number of run tasks to run at a time. The default is the number of CPU cores (including\nhyper-threaded) + 1",
                    "type": "number"
                },
                "cpu": {
                    "defaultProperties": [
                    ],
                    "properties": {
                        "bucket": {
                            "default": ": 10000",
                            "description": "CPU bucket size per user",
                            "type": "number"
                        },
                        "memoryLimit": {
                            "default": 256,
                            "description": "Memory limit, in megabytes. The actual memory limit as reported by the isolate will be\nhigher, since it accounts for shared terrain data.\n\nThis option does nothing when `unsafeSandbox` is true.",
                            "type": "number"
                        },
                        "tickLimit": {
                            "default": ": 500",
                            "description": "Maximum amount of time in milliseconds that a user's runtime may run for.",
                            "type": "number"
                        }
                    },
                    "type": "object"
                },
                "migrationTimeout": {
                    "default": 50,
                    "description": "How long an idle runner will wait before migrating a player sandbox into that runner, causing\na hard reset for the player.",
                    "type": "number"
                },
                "unsafeSandbox": {
                    "default": false,
                    "description": "Setting this to true will run user code using the nodejs `vm` module instead\nof `isolated-vm`. Do not enable this on public servers!",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "schemaArchive": {
            "default": "./screeps/archive",
            "description": "Where to save descriptions of the binary format used to write game data.",
            "type": "string"
        },
        "shards": {
            "default": "`[ {\nname: 'shard0',\ndata: './screeps/shard0',\npubsub: 'local://shard0',\nscratch: 'local://shard0',\n} ]`",
            "description": "Configuration for shard-specific storage",
            "items": {
                "defaultProperties": [
                ],
                "properties": {
                    "data": {
                        "description": "Persistent storage provider URI",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of this shard",
                        "type": "string"
                    },
                    "pubsub": {
                        "description": "Pubsub storage provider URI",
                        "type": "string"
                    },
                    "scratch": {
                        "description": "Temporary storage provider URI",
                        "type": "string"
                    }
                },
                "required": [
                    "data",
                    "name",
                    "pubsub",
                    "scratch"
                ],
                "type": "object"
            },
            "type": "array"
        }
    },
    "type": "object"
}

